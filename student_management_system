from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi


uri = "mongodb+srv://josemarie:B4wZTxcgHYbPEvkw@atlascluster.45jrjqo.mongodb.net/?retryWrites=true&w=majority&appName=AtlasCluster"

# Create a new client and connect to the server
client = MongoClient(uri, server_api=ServerApi('1'))

# Send a ping to confirm a successful connection
try:
    client.admin.command('ping')
    print("Pinged your deployment. You successfully connected to MongoDB!")
except Exception as e:
    print(e)

db = client["studentmanagent"]
students = db["students"]

def add_one_student():
    while True:
        roll_number = input("Enter student roll number: ")
        name = input("Enter student name: ")
        age = int(input("Enter student age: "))
        gender = input("Enter student gender: ")
        grade = input("Enter student grade: ")
        subjects = input("Enter student subjects (comma-separated): ").split(",")
        student = {"Roll_number": roll_number, "Name": name, "Age": age, "Gender" : gender, "Grade": grade, "Subjects": subjects}
        students.insert_one(student)
        print("Student added successfully.")
        choose = input("Do you need to continue to add students? [y/n] : ")
        if choose != "y":
           break

def add_many_student():
    num_students = int(input("Enter the number of students to add: "))
    details = []
    for i in range(num_students):
        roll_number = input(f"Enter roll number for student {i+1}: ")
        name = input(f"Enter name for student {i+1}: ")
        age = int(input(f"Enter age for student {i+1}: "))
        gender = input(f"Enter gender for student {i+1}: ")
        grade = input(f"Enter grade for student {i+1}: ")
        subjects = input(f"Enter subjects (comma-separated) for student {i+1}: ").split(",")
        adding_details = {
            "Roll_number": roll_number,
            "Name": name,
            "Age": age,
            "Gender": gender,
            "Grade": grade,
            "Subjects": subjects
        }
        details.append(adding_details)

    students.insert_many(details)
    print("Students added Successfully.")
    

def view_students():
    filter = list(students.find())
    if filter:
        print("-" * 110)
        print("{:<15} | {:<20} | {:<5} | {:<10} | {:<15} | {:<20}".format("Roll Number", "Name", "Age", "Gender", "Grade", "Subjects"))
        print("-" * 110)
        for student in filter:
            roll_number = student.get("Roll_number", "")
            name = student.get("Name", "")
            age = student.get("Age", "")
            gender = student.get("Gender", "")
            grade = student.get("Grade", "")
            subjects = ", ".join(student.get("Subjects", []))
            print("{:<15} | {:<20} | {:<5} | {:<10} | {:<15} | {:<20}".format(roll_number, name, age, gender, grade, subjects))
            print("-" * 110)
    else:
        print("No students found.")

def print_student_details(filter):
    print("| {:<15} | {:<20} | {:<5} | {:<10} | {:<10} | {:<20} ".format(
        filter["Roll_number"],
        filter["Name"],
        filter["Age"],
        filter["Gender"],
        filter["Grade"],
        ", ".join(filter["Subjects"])
    ))

def find_one_student():
    roll_number = input("Enter the roll number of the student: ")
    filter =students.find_one({"Roll_number": roll_number})
    if filter:
        print_student_details(filter)
    else:
        print("Student not found.")

def find_many_students():
    grade = input("Enter the grade to find students: ")
    filter = students.find({"Grade": grade})
    num_students = students.count_documents({})
    if num_students > 0:
        print(f"Students in grade {grade}:")
        print("| {:<15} | {:<20} | {:<5} | {:<10} | {:<10} | {:<20} ".format(
            "Roll Number", "Name", "Age", "Gender", "Grade", "Subjects"
        ))
        print("-" * 110)
        for i in filter:
            print_student_details(i)
    else:
        print(f"No students found in grade {grade}.")


def update_student():
    while True:
        roll_number = input("Enter the roll number of student to update: ")
        query = students.find_one({"Roll_number": roll_number})
        if query:
            print("1. Name\n2. Age\n3. Gender\n4. Grade\n5. Subjects")
            query = int(input("Choose any number from above to update the details of the student: "))
            if query == 1:
                new_name = input("Enter new name: ")
                students.update_one({"Roll_number": roll_number}, {"$set": {"Name": new_name}})
                print("Name updated successfully.")
            elif query == 2:
                new_age = int(input("Enter new age: "))
                students.update_one({"Roll_number": roll_number}, {"$set": {"Age": new_age}})
                print("Age updated successfully.")
            elif query == 3:
                new_gender = input("Enter new gender: ")
                students.update_one({"Roll_number": roll_number}, {"$set": {"Gender": new_gender}})
                print("Gender updated successfully.")
            elif query == 4:
                new_grade = input("Enter new grade: ")
                students.update_one({"Roll_number": roll_number}, {"$set": {"Grade": new_grade}})
                print("Grade updated successfully.")
            elif query == 5:
                new_subjects = input("Enter new subjects (comma-separated): ").split(",")
                students.update_one({"Roll_number": roll_number}, {"$set": {"Subjects": new_subjects}})
                print("Subjects updated successfully.")
            else:
                print("Number out of range.")
        else:
            print("Roll number not found.")
        
        choice = input("Do you want to update another student? (yes/no): ")
        if choice.lower() != 'yes':
            break



def delete_one_student():
    while True:
        roll_number = input("Enter the roll number of student to delete: ")
        x = students.find_one({"Roll_number": roll_number})
        if x:
            students.delete_one({"Roll_number": roll_number})
            print("Student deleted successfully.")
        else:
            print("Roll number not found.")
        choice = input("Do you want to delete another student? (yes/no): ")
        if choice.lower() != "yes":
            break

def delete_many_students():
    grade = input("Enter the grade of students to delete: ")
    filter = students.find({"Grade": grade})
    num_students = students.count_documents({})
    if num_students > 0:
        for i in filter:
            print_student_details(i)
        confirm = input("Are you sure you want to delete these students? (yes/no): ")
        if confirm.lower() == 'yes':
            result = students.delete_many({"Grade": grade})
            print(f"{result.deleted_count} students deleted successfully.")
        else:
            print("Deletion canceled.")
    else:
        print(f"No students found in grade {grade}.")

def main():
    while True:
        print("\n1. Add one Student")
        print("2. Add many students")
        print("3. View Students")
        print("4. Find_one_student")
        print("5. Find_many_student")
        print("6. Update Student")
        print("7. Delete_one_Student")
        print("8. Delete_many_Students")
        print("9. Exit")

        choice = int(input("Enter your choice: "))

        if choice == 1:
            add_one_student()
        elif choice == 2:
            add_many_student()
        elif choice == 3:
            view_students()
        elif choice == 4:
            find_one_student()
        elif choice == 5:
            find_many_students()
        elif choice == 6:
            update_student()
        elif choice == 7:
            delete_one_student()
        elif choice == 8:
            delete_many_students()
        elif choice == 9:
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
